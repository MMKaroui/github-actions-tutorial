# Step 1: Build and Test the Docker Image
docker build -t Your-Website:latest . (replace Your-Website as shown below "githubactionsweb")
docker build -t github-actions-tutorial:latest .

# Run the Container
docker run -p 8080:80 github-actions-tutorial:latest

# Open localhost:8080 to browse the website
http://localhost:8080

# Step 3: Push the Docker Image to a Container Registry (ECR)
# Create an ECR repo 
aws ecr create-repository --repository-name github-actions-tutorial

# Login to ECR 
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 385320741566.dkr.ecr.us-east-1.amazonaws.com/github-actions-tutorial

# Tag and Push your Image               
docker tag githubactionsweb:latest 385320741566.dkr.ecr.us-east-1.amazonaws.com/github-actions-tutorial
docker push 385320741566.dkr.ecr.us-east-1.amazonaws.com/github-actions-tutorial

# Step 4: Set Up GitHub Actions for Deployment
# Create a .github/workflows/deploy.yml file in your repository:

# Step 5: Create ECS Task Definition and Service
# Create ECS cluster 
aws ecs create-cluster --cluster-name your-ecs-cluster

# Create Task definition
Create an ECS Task Definition: Create a ecs-task-def.json file in your repository

# Create the roles required for the task definition
# Create ECS SG to allow HTTP and HTTPS 

------------- Repeat after deleting the service and task in ECS ----------

# Register the Task Definition:
aws ecs register-task-definition --cli-input-json file://ecs-task-def.json

# Create an ECS Service:
aws ecs create-service \
--cluster github-actions-tutorial-ecs-cluster \
--service-name github-actions-tutorial-ecs-service \
--task-definition github-actions-tutorial-task-def-family --desired-count 1 \
--launch-type FARGATE \
--network-configuration "awsvpcConfiguration={subnets=[subnet-0de347e19601ecf3a],securityGroups=[sg-0feee798ceb877db1],assignPublicIp=ENABLED}"

# Commmit code changes to deploy code from github to ECS using GitHub Actions

--network-configuration "awsvpcConfiguration={subnets=[us-east-1a],securityGroups=[your-security-group-id],assignPublicIp=ENABLED}"



